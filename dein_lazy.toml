
    #補完機能
    # 多言語補完
    [[plugins]]
    repo='Shougo/neco-syntax'
    on_event='InsertEnter'
    depends=['deoplete.nvim']

    #python補完機能
    # [[plugins]]
    # repo='zchee/deoplete-jedi'
    # #insertモードで読み込み
    # on_event='InsertEnter'
    # #指定したファイルタイプの時読み込む
    # on_ft=['python']
    # depends=['deoplete.nvim']
    # hook_post_source='''
    # g:deoplete#source#jedi#server_timeout=40
    # '''

    [[plugins]]
    repo='Shougo/neoinclude.vim'
    on_event='InsertEnter'
    on_ft=['c', 'cpp', 'objc', 'objcpp']

    #javascript補完機能
    # repo='carlitux/deoplete-ternjs'
    # on_ft=['javascript']
    # on_event='InsertEnter'
    # depends=['deoplete.nvim']

    #html補完
    [[plugins]]
    repo='mattn/emmet-vim'
    hook_source='''
    let g:user_emmet_settings={
        \ 'lang' : 'ja',
        \ 'html' : {
        \   'filters' : 'html',
        \ },
        \ 'css' : {
        \   'filters' : 'fc',
        \ },
        \ 'php' : {
        \   'extends' : 'html',
        \   'filters' : 'html',
        \ },
        \ }
    let g:user_emmet_leader_key='<C-_>'
       '''
    on_ft=['html', 'css', 'php']
    on_event='InsertEnter'

    [[plugins]]
    repo='othree/html5.vim'
    on_ft=['html']
    on_event='InsertEnter'

    #Nim Filetype設定
    [[plugins]]
    repo='zah/nim.vim'
    on_ft=['nim']

    #neosnippet
    [[plugins]]
    repo='Shougo/neosnippet'
    hook_source='''
    imap <C-k> <Plug>(neosnippet_expand_or_jump)
    smap <C-k> <Plug>(neosnippet_expand_or_jump)
    xmap <C-k> <Plug>(neosnippet_expand_target)
    if has('conceal')
        set conceallevel=2 concealcursor=niv
    endif
    '''
    on_event='InsertEnter'
    on_ft=['snippet']
    depends=['neosnippet-snippets']

    #neco-vim
    [[plugins]]
    repo='Shougo/neco-vim'
    on_event='InsertEnter'
    on_ft=['vim']
    depends=['deoplete.nvim']

    #自動括弧
    [[plugins]]
    repo='cohama/lexima.vim'
    hook_source="""
    call lexima#add_rule({'char': '<C-]>', 'at': '\%#)', 'leave': 1})
    call lexima#add_rule({'char': '<C-]>', 'at': '\%#"', 'leave': 1})
    call lexima#add_rule({'char': '<C-]>', 'at': '\%#]', 'leave': 1})
    call lexima#add_rule({'char': '<C-]>', 'at': '\%#}', 'leave': 1})
    call lexima#add_rule({'char': '<C-]>', 'at': '\%#''', 'leave': 1})
    call lexima#add_rule({'char': '<C-]>', 'at': '\%#>>>', 'leave': 3})
    call lexima#add_rule({'char': '<C-]>', 'at': '\%#>', 'leave': 1})
    call lexima#add_rule({'char': '<', 'at': '<<\%#', 'input_after': '>>>', 'filetype': 'cuda'})
    call lexima#add_rule({'char': '>', 'at': '\%#>>>', 'leave': 3, 'filetype': 'cuda'})
    call lexima#add_rule({'char': '<BS>', 'at': '<<<\%#>>>', 'input': '<BS><BS><BS>', 'delete': 3, 'filetype': 'cuda'})
    call lexima#add_rule({'char': '%', 'at': '{\%#', 'input_after': '%'})
    call lexima#add_rule({'char': '.', 'at': '{\%#', 'input_after': '.'})
    """

    on_event='InsertEnter'

    #html-scriptインデント
    [[plugins]]
    repo='osyo-manga/vim-precious'
    on_ft=['html', 'toml']

    [[plugins]]
    repo='kana/vim-smartchr'
    hook_add='''
    inoremap <expr> , smartchr#loop(', ',',')
    au FileType python,pyrex,lua,c,cpp,objc,objcpp,rust,java,typescript,javascript,ruby
                \ inoremap <buffer><expr> < smartchr#one_of(' < ', ' << ', '<')
    au FileType python,pyrex,c,cpp,objc,objcpp,java,lua,nim
                \ inoremap <buffer><expr> > smartchr#one_of(' > ', ' >> ', '>')
    au FileType rust,javascript,typescript,ruby
                \ inoremap <buffer><expr> > search('= \%#', 'bcn') ?
                \ '<BS>> ' : smartchr#one_of(' > ', ' >> ', '>')
    au FileType javascript,typescript
                \ inoremap <buffer><expr> = search('.*\(+\\|-\\|<\\|>\)\s\%#','bcn')?
                \ '<BS>= ': search('!\%#', 'bcn')?
                \ '<BS> != ': search('!=\+ \%#', 'bcn')?
                \ '<BS>= ': smartchr#loop(' = ', ' == ', ' === ', '=')
    au FileType python,pyrex,lua,c,cpp,cuda,objc,objcpp,rust,java,nim,toml,ruby
                \ inoremap <buffer><expr> = search('.*\(+\\|-\\|<\\|>\)\s\%#','bcn')?
                \ '<BS>= ': search('.*!\%#', 'bcn')?
                \ '<BS> != ': smartchr#one_of(' = ', ' == ', '=')
    au FileType python,pyrex,lua,ruby
                \ inoremap <buffer><expr> + smartchr#one_of(' + ', '+')
    au FileType python,pyrex,lua,ruby
                \ inoremap <buffer><expr> - smartchr#one_of(' - ', '-')
    au FileType python,pyrex,lua,javascript,nim
                \ inoremap <buffer><expr> / smartchr#one_of(' / ', ' // ', '/')
    au FileType python,pyrex,ruby
                \ inoremap <buffer><expr> * smartchr#one_of(' * ', ' ** ', '*')
    au FileType python,pyrex
                \ inoremap <buffer><expr> & smartchr#one_of(' & ', ' && ', '&')
    au FileType lua
                \ inoremap <buffer><expr> ^ smartchr#loop(' ^ ', '^')
    au FileType javascript,c,cpp,cuda,objc,objcpp,rust,java,nim,typescript,javascript
                \ inoremap <buffer><expr> + smartchr#one_of(' + ', '++', '+')
    au FileType javascript,c,cpp,cuda,objc,objcpp,java,nim,typescript,javascript
                \ inoremap <buffer><expr> - smartchr#one_of(' - ', '--', '-')
    au FileType rust
                \ inoremap <buffer><expr> - search('< \%#', 'bcn') ?
                \ '- ' : smartchr#one_of(' - ', '--', '-')
    au FileType c,cuda,objc,java
                \ inoremap <buffer><expr> & smartchr#one_of('&', ' && ', ' & ', '&=')
    au FileType c,cpp,cuda,python,pyrex,rust,java
                \ inoremap <buffer><expr> . smartchr#one_of('.','->','..')
    au FileType php
                \ inoremap <buffer><expr> ? search('<\%#', 'bcn') ?
                \ '??><LEFT><LEFT>' : '?'
    au FileType nim
                \ inoremap <buffer><expr> < search('\.\%#', 'bcn') ?
                \ '<' : smartchr#one_of(' < ', ' << ', '<')

    inoremap <buffer><expr> <BS> search('<\%#>','bcn')? '<BS><DEL>': '<BS>'
    inoremap <C-l> <><LEFT>
    '''
    on_event='InsertEnter'

    [[plugins]]
    repo='zchee/deoplete-zsh'
    on_ft=['zsh']
    on_event='InsertEnter'
    depends=['deoplete.nvim']

    [[plugins]]
    repo='mhartington/nvim-typescript'
    on_event='InsertEnter'
    on_ft=['typescript', 'tsx', 'typescript.tsx']
    depends=['deoplete.nvim']
    build='./install.sh'

    [[plugins]]
    repo='fishbullet/deoplete-ruby'
    on_event='InsertEnter'
    on_ft=['ruby']
    depends=['deoplete.nvim']

    [[plugins]]
    repo='zchee/deoplete-go'
    on_event='InsertEnter'
    on_ft=['go']
    depends=['deoplete.nvim']

    #tomlファイルの構文予測
    [[plugins]]
    repo='cespare/vim-toml'
    on_ft='toml'

    # typescript
    [[plugins]]
    repo='HerringtonDarkholme/yats.vim'
    on_ft='typescript'

    # GLSL
    [[plugins]]
    repo='tikhomirov/vim-glsl'
    on_ft='glsl'
