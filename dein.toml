
#dein
[[plugins]]
repo='Shougo/dein.vim'

[[plugins]]
repo='Shougo/deol.nvim'

#簡単実行できる
[[plugins]]
repo='thinca/vim-quickrun'
hook_post_update='''
    if !(exists("g:quickrun_config")
        let g:quickrun_config={}
    endif
    let g:quickrun_config["watchdogs_checker/_"]={
        \"outputter/quickfix/open_cmd" : "",
    \}
    let g:quickrun_config={'*':{'hook/time/enable':'1'},}
    '''

[[plugins]]
repo='osyo-manga/shabadou.vim'

#簡単にコメントアウトできる
[[plugins]]
repo='tomtom/tcomment_vim'

#コマンド集
[[plugins]]
repo='Shougo/denite.nvim'

#文字に色をつける
[[plugins]]
repo='tomasr/molokai'
hook_add='''
if dein#tap('molokai')
    colorscheme molokai
endif
set background=dark
set termguicolors
set t_Co=256
syntax enable
filetype plugin indent on
"neovimに入った時に読み込む
au MyAutoCmd VimEnter * nested colorscheme molokai
'''

# git
[[plugins]]
repo='tpope/vim-fugitive'

#ステータスラインの表示内容強化
[[plugins]]
repo='itchyny/lightline.vim'
hook_add='''
function! GitStr() abort
    if len(FugitiveHead()) != 0
        return nr2char(0xe725) . ' ' . FugitiveHead()
    else
        return ''
    endif
endfunction

function! MyFiletype() abort
    return strlen(&filetype) ? &filetype . ' ' . WebDevIconsGetFileTypeSymbol() : 'no ft'
endfunction

function! MyFileformat()
    return &fileformat . ' ' . WebDevIconsGetFileFormatSymbol()
endfunction

let g:lightline = {
            \ 'colorscheme': 'powerline',
            \ 'active': {
            \   'left': [ [ 'mode', 'paste' ],
            \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
            \   },
            \   'separator': { 'left': nr2char(0xe0b0), 'right': nr2char(0xe0b2) },
            \   'subseparator': { 'left': nr2char(0xe0b1), 'right': nr2char(0xe0b3) },
            \   'component_function': {
            \       'gitbranch': 'GitStr',
            \       'filetype': 'MyFiletype',
            \   },
            \ }
'''

[[plugins]]
repo='ntpeters/vim-better-whitespace'
hook_add='''
" highlight ExtraWhitespace ctermbg=''
let g:better_whitespace_filetypes_blacklist=['defx', 'diff', 'gitcommit', 'help']
let g:strip_whitespace_on_save=1
'''

# #インデントの可視化
[[plugins]]
repo='nathanaelkane/vim-indent-guides'
hook_source='''
let g:indent_guides_auto_colors=0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd guibg=#323232
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#212121
'''
hook_add='''
let g:indent_guides_enable_on_vim_startup=1
let g:indent_guides_start_level=1
let g:indent_guides_exclude_filetypes=['help', 'nerdtree', 'tagbar', 'unite']
'''

[[plugins]]
repo='ryanoasis/vim-devicons'

#snippets
[[plugins]]
repo='Shougo/neosnippet-snippets'

#filetype
[[plugins]]
repo='Shougo/context_filetype.vim'

# # Basilico
# [[plugins]]
# repo='~/Documents/cpp/Basilico'
# build='bash build.sh'
# hook_add='''
# let g:basilico#color_theme = 'dark'
# let g:basilico#ext_tabline = v:true
# let g:basilico#ext_popupmenu = v:false
# '''
#
# # Basilico GUI Plugins
# [[plugins]]
# repo='~/Documents/cpp/BasilWeb'
# hook_add='''
# let g:basilweb#setting_dict = {}
# let g:basilweb#setting_dict['progressbar_style_sheet'] =
#             \ 'QProgressBar
#             \ {
#             \     max-height: 5px;
#             \     border: 1px solid grey;
#             \     background-color: #999999;
#             \     border-radius: 5px;
#             \ }
#             \ QProgressBar::chunk
#             \ {
#             \     background-color: grey;
#             \ }'
# let g:basilweb#color_scheme = 'dark'
# nnoremap <silent><C-LeftMouse> :call basilweb#openweb_with_cursor_url()<CR>
# '''
#
# [[plugins]]
# repo='~/Documents/cpp/RuntimeView'
# hook_add='''
# let g:runtime_view#css_name = 'github-gist'
# '''
#
# [[plugins]]
# repo='~/Documents/cpp/PDFView'

#QML
[[plugins]]
repo='peterhoeg/vim-qml'

#jsx
[[plugins]]
repo='mxw/vim-jsx'

# julia
[[plugins]]
repo='JuliaEditorSupport/julia-vim'

# kotlin
[[plugins]]
repo='udalov/kotlin-vim'

# pug
[[plugins]]
repo='digitaltoad/vim-pug'

[[plugins]]
repo='neoclide/coc.nvim'
rev='release'
hook_add='''
set hidden
set nowritebackup
set updatetime=300
set signcolumn=yes

inoremap <silent><expr> <TAB>
    \ coc#pum#visible() ? coc#pum#next(1):
    \ CheckBackspace() ? "\<TAB>":
    \ coc#refresh()
inoremap <expr> <S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\<C-h>"
inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm():
    \ "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

function! CheckBackspace() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~# '\s'
endfunction

nnoremap <silent> <A-h> :call CocActionAsync('doHover')<CR>
nnoremap <silent> <A-r> :call CocActionAsync('rename')<CR>
nnoremap <silent> <A-f> :call CocActionAsync('format')<CR>
nnoremap <silent> <A-a> :call CocActionAsync('codeAction')<CR>
nnoremap <silent> <A-l> :call CocActionAsync('openLink')<CR>
nnoremap <silent> <A-j> :call CocActionAsync('diagnosticNext')<CR>
nnoremap <silent> <A-k> :call CocActionAsync('diagnosticPrevious')<CR>
au CursorHold * silent call CocActionAsync('highlight')

nnoremap <silent> <A-m> :CocCommand explorer <CR>
nnoremap <silent> <A-n> :CocCommand explorer --position left <CR>

let g:coc_snippet_next = '<C-k>'
'''

[[plugins]]
repo='junegunn/fzf'

# [[plugins]]
# repo='~/Documents/python/BugHunt.nvim'
# hook_add='''
# nnoremap <A-b> :call bughunt#breakpoint()<CR>
# '''
# [[plugins]]
# repo='~/Documents/python/BugHunt-gdb'
# depends=['BugHunt.nvim']
# hook_add='''
# let g:bughunt#terminal#name_color = '#9AF4FE'
# let g:bughunt#terminal#top_string = ['', '']
# let g:bughunt#terminal#last_string = ['', ' >>> ']
# let g:bughunt#debug_status_win_width = 35
# let g:bughunt#debug_cmd_win_height = 15
# '''

[[plugins]]
repo='vim-scripts/DrawIt'

[[plugins]]
repo='t9md/vim-textmanip'
hook_add='''
vmap <C-j> <Plug>(textmanip-move-down)
vmap <C-k> <Plug>(textmanip-move-up)
vmap <C-h> <Plug>(textmanip-move-left)
vmap <C-l> <Plug>(textmanip-move-right)
vmap <A-k> <Plug>(textmanip-duplicate-up)
vmap <A-j> <Plug>(textmanip-duplicate-down)
vmap <A-h> <Plug>(textmanip-duplicate-left)
vmap <A-l> <Plug>(textmanip-duplicate-right)
'''

[[plugins]]
repo='tpope/vim-surround'

[[plugins]]
repo='Shougo/echodoc.vim'
hook_add='''
let g:echodoc#enable_at_startup = 1
let g:echodoc#type = 'signature'
'''

[[plugins]]
repo='dstein64/nvim-scrollview'
hook_add='''
let g:scrollview_excluded_filetypes = ["coc-explorer"]
let g:scrollview_current_only = 1
let g:scrollview_winblend = 75
let g:scrollview_base = "right"
'''
